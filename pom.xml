<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.jukusoft</groupId>
	<artifactId>mmo-game-server</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<modules>
		<module>core</module>
		<module>commons</module>
		<module>frontend</module>
		<module>database</module>
		<module>backend</module>
		<module>main</module>
	</modules>

	<properties>
		<!-- Java version -->
		<java.version>1.8</java.version>

		<!-- JUnit version -->
		<junit.version>5.1.0</junit.version>

		<!-- vert.x version -->
		<vertx.version>3.5.1</vertx.version>

		<mockito.version>2.2.7</mockito.version>

		<!-- hppc, high performance lists & maps, https://github.com/carrotsearch/hppc -->
		<hppc.version>0.7.3</hppc.version>

		<!-- library for high performance Real-Time and Embedded Systems, 5.4.1 -->
		<javolution.version>6.0.0</javolution.version>

		<!-- log4j -->
		<log4j.version>2.11.0</log4j.version>

		<!-- ini4j parser -->
		<ini4j.version>0.5.4</ini4j.version>

		<!-- flyway for database upgrade / migration -->
		<flyway.version>5.0.7</flyway.version>

		<!-- hazelcast version -->
		<hazelcast.version>3.10</hazelcast.version>

		<!-- mysql connector version -->
		<mysql.connector.version>6.0.6</mysql.connector.version>

		<!-- mysql connection pooling 1-->
		<hikaricp.version>3.1.0</hikaricp.version>

		<!-- format maven build timestamp to add to manifest -->
		<!-- <timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format> -->

		<jacoco.reportPath>${project.basedir}/../target/jacoco.exec</jacoco.reportPath>

		<!-- Sonar properties-->
		<sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.language>java</sonar.language>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

		<!-- file encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>1.1.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>1.1.0</version>
			<scope>test</scope>
		</dependency>

		<!-- library for high performance Real-Time and Embedded Systems -->
		<!-- <dependency>
			<groupId>org.javolution</groupId>
			<artifactId>javolution</artifactId>
			<version>${javolution.version}</version>
		</dependency> -->
		<!-- <dependency>
			<groupId>javolution</groupId>
			<artifactId>javolution</artifactId>
			<version>5.4.1</version>
		</dependency> -->
		<dependency>
			<groupId>org.javolution</groupId>
			<artifactId>javolution-core-java</artifactId>
			<version>${javolution.version}</version>

			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<!-- <dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
			<version>2.11.0</version>
		</dependency> -->

		<!-- for JUnit tests -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- set Java version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- https://stackoverflow.com/questions/39634478/maven-jacoco-configuration-for-multi-module-projects -->

			<!-- https://stackoverflow.com/questions/13031219/how-to-configure-multi-module-maven-sonar-jacoco-to-give-merged-coverage-rep/37871210#37871210 -->
			<!-- <plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.6.201602180812</version>
				<executions>
					<execution>
						<id>agent-for-ut</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<append>true</append>
							<destFile>${jacoco.reportPath}</destFile>
						</configuration>
					</execution>
				</executions>
			</plugin> -->

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.6.201602180812</version>
				<executions>
					<execution>
						<id>agent-for-ut</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<append>true</append>
							<destFile>${sonar.jacoco.reportPath}</destFile>
						</configuration>
					</execution>
					<execution>
						<id>agent-for-it</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<append>true</append>
							<destFile>${sonar.jacoco.itReportPath}</destFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>